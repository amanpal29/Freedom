//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using log4net;
using System;
using System.Configuration;
using System.Reflection;

namespace Freedom.Client.Properties
{


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        private static readonly ILog Log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);

        private Settings()
        {
            if (!HasSettings)
            {
                try
                {
                    Upgrade();
                }
                catch (ConfigurationErrorsException exception)
                {
                    Log.Warn("An error occurred while trying to upgrade settings from a previous version.", exception);
                }

                HasSettings = true;
                Save();
            }
        }
                
        public static Settings Default { get; } = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        [UserScopedSetting]
        [DefaultSettingValue("False")]
        public bool HasSettings
        {
            get { return (bool)this["HasSettings"]; }
            set { this["HasSettings"] = value; }
        }

        [UserScopedSetting]
        [DefaultSettingValue("")]
        public string LastLoggedInUserName
        {
            get { return (string)this["LastLoggedInUserName"]; }
            set { this["LastLoggedInUserName"] = value; }
        }

        [UserScopedSetting]
        [DefaultSettingValue("")]
        public DateTime LastLoggedInDateTime
        {
            get { return (DateTime)this["LastLoggedInDateTime"]; }
            set { this["LastLoggedInDateTime"] = value; }
        }
    }
}
