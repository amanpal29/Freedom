//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Globalization;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using Freedom.Domain.Infrastructure;
using Freedom.Domain.Services.Repository;
using Freedom.Collections;
using Freedom.ComponentModel;

namespace Freedom.Domain.Model
{
	[DataContract(Namespace = Namespace)]

	public partial class StockExchange : Lookup
	{
		public override string EntityTypeName
		{
			get { return "StockExchange"; }
		}

		[DataMember(EmitDefaultValue = false)]
		public override User CreatedBy
		{
			get { return _createdBy; }
			set
			{
				if (object.ReferenceEquals(_createdBy, value)) return;

				_createdBy = value;

				if (value != null)
					CreatedById = value.Id;

				OnPropertyChanged();
			}
		}
		private User _createdBy;

		[DataMember(EmitDefaultValue = false)]
		public override User ModifiedBy
		{
			get { return _modifiedBy; }
			set
			{
				if (object.ReferenceEquals(_modifiedBy, value)) return;

				_modifiedBy = value;

				if (value != null)
					ModifiedById = value.Id;

				OnPropertyChanged();
			}
		}
		private User _modifiedBy;

		public override void Copy(Entity entity)
		{
			base.Copy(entity);

			StockExchange source = entity as StockExchange;

			if (source == null)
				throw new ArgumentException("entity", "entity must be an instance of StockExchange.");

		}
	}
}
