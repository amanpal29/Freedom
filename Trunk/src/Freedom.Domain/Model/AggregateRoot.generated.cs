//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Globalization;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using Freedom.Domain.Infrastructure;
using Freedom.Domain.Services.Repository;
using Freedom.ComponentModel;

namespace Freedom.Domain.Model
{
	[DataContract(Namespace = Namespace)]
	[KnownType(typeof(ApplicationSetting))]
	[KnownType(typeof(LookupBase))]
	[KnownType(typeof(NumberedRoot))]
	[KnownType(typeof(User))]

	public abstract partial class AggregateRoot : EntityBase
	{
		[DataMember(EmitDefaultValue = false)]
		public DateTime CreatedDateTime
		{
			get { return _createdDateTime; }
			set
			{
				if (_createdDateTime == value) return;
				_createdDateTime = value;
				MarkAsChanged();
				OnPropertyChanged();
			}
		}
		private DateTime _createdDateTime;

		[DataMember(EmitDefaultValue = false)]
		public DateTime ModifiedDateTime
		{
			get { return _modifiedDateTime; }
			set
			{
				if (_modifiedDateTime == value) return;
				_modifiedDateTime = value;
				MarkAsChanged();
				OnPropertyChanged();
			}
		}
		private DateTime _modifiedDateTime;

		[DataMember(EmitDefaultValue = false)]
		public Guid CreatedById
		{
			get { return _createdById; }
			set
			{
				if (_createdById == value) return;
				_createdById = value;
				MarkAsChanged();
				OnPropertyChanged();
			}
		}
		private Guid _createdById;

		[DataMember(EmitDefaultValue = false)]
		public Guid ModifiedById
		{
			get { return _modifiedById; }
			set
			{
				if (_modifiedById == value) return;
				_modifiedById = value;
				MarkAsChanged();
				OnPropertyChanged();
			}
		}
		private Guid _modifiedById;

		[DataMember(EmitDefaultValue = false)]
		public abstract User CreatedBy { get; set; }

		[DataMember(EmitDefaultValue = false)]
		public abstract User ModifiedBy { get; set; }

		public override void Copy(Entity entity)
		{
			base.Copy(entity);

			AggregateRoot source = entity as AggregateRoot;

			if (source == null)
				throw new ArgumentException("entity", "entity must be an instance of AggregateRoot.");

			CreatedDateTime = source._createdDateTime;
			ModifiedDateTime = source._modifiedDateTime;
			CreatedById = source._createdById;
			ModifiedById = source._modifiedById;
		}
	}
}
