//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Globalization;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using Freedom.Domain.Infrastructure;
using Freedom.Domain.Services.Repository;
using Freedom.Collections;
using Freedom.ComponentModel;

namespace Freedom.Domain.Model
{
	[DataContract(Namespace = Namespace)]

	public partial class UserRole : Entity
	{
		public UserRole()
		{
		}

		public UserRole(Guid userId, Guid roleId)
			: this()
		{
			_userId = userId;
			_roleId = roleId;
		}

		public override string EntityTypeName
		{
			get { return "UserRole"; }
		}

		[DataMember(EmitDefaultValue = false)]
		public Guid UserId
		{
			get { return _userId; }
			set { _userId = value; }
		}
		private Guid _userId;

		[DataMember(EmitDefaultValue = false)]
		public Guid RoleId
		{
			get { return _roleId; }
			set { _roleId = value; }
		}
		private Guid _roleId;

		[DataMember(EmitDefaultValue = false)]
		public virtual User User
		{
			get { return _user; }
			set
			{
				if (object.ReferenceEquals(_user, value)) return;

				_user = value;

				if (value != null)
					UserId = value.Id;
			}
		}
		private User _user;

		[DataMember(EmitDefaultValue = false)]
		public virtual Role Role
		{
			get { return _role; }
			set
			{
				if (object.ReferenceEquals(_role, value)) return;

				_role = value;

				if (value != null)
					RoleId = value.Id;
			}
		}
		private Role _role;

		public virtual void Copy(Entity entity)
		{
			UserRole source = entity as UserRole;

			if (source == null)
				throw new ArgumentException("entity", "entity must be an instance of UserRole.");

			UserId = source._userId;
			RoleId = source._roleId;
		}
	}
}
