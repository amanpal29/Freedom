//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations.Schema;
using System.Diagnostics;
using System.Globalization;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using Freedom.Domain.Infrastructure;
using Freedom.Domain.Services.Repository;
using Freedom.Collections;
using Freedom.ComponentModel;

namespace Freedom.Domain.Model
{
	[DataContract(Namespace = Namespace)]

	public partial class WatchlistStock : Entity
	{
		public WatchlistStock()
		{
		}

		public WatchlistStock(Guid watchlistId, Guid stockId)
			: this()
		{
			_watchlistId = watchlistId;
			_stockId = stockId;
		}

		public override string EntityTypeName
		{
			get { return "WatchlistStock"; }
		}

		[DataMember(EmitDefaultValue = false)]
		public Guid WatchlistId
		{
			get { return _watchlistId; }
			set { _watchlistId = value; }
		}
		private Guid _watchlistId;

		[DataMember(EmitDefaultValue = false)]
		public Guid StockId
		{
			get { return _stockId; }
			set { _stockId = value; }
		}
		private Guid _stockId;

		[DataMember(EmitDefaultValue = false)]
		public virtual Watchlist Watchlist
		{
			get { return _watchlist; }
			set
			{
				if (object.ReferenceEquals(_watchlist, value)) return;

				_watchlist = value;

				if (value != null)
					WatchlistId = value.Id;
			}
		}
		private Watchlist _watchlist;

		[DataMember(EmitDefaultValue = false)]
		public virtual Stock Stock
		{
			get { return _stock; }
			set
			{
				if (object.ReferenceEquals(_stock, value)) return;

				_stock = value;

				if (value != null)
					StockId = value.Id;
			}
		}
		private Stock _stock;

		public virtual void Copy(Entity entity)
		{
			WatchlistStock source = entity as WatchlistStock;

			if (source == null)
				throw new ArgumentException("entity", "entity must be an instance of WatchlistStock.");

			WatchlistId = source._watchlistId;
			StockId = source._stockId;
		}
	}
}
